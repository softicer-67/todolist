version: "3.8"

volumes:
  postgres:

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_NAME
      POSTGRES_USER: $POSTGRES_USER
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  migrations:
    image: softicer/todo-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py migrate

  api:
    image: softicer/todo-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/app/.env
    command: python manage.py runserver 0.0.0.0:8000

  bot:
    image: softicer/todo-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py runbot

  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "8080:80"
    depends_on:
      - api